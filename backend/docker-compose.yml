networks:
  mynetwork:

services:
  loldle-frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: loldle-frontend:latest
    container_name: loldle-frontend
    depends_on:
      - loldle-api
    ports:
      - 80:80
      - 443:443
      - 8241:8241
    restart: unless-stopped
    volumes:
      - /root/infiniteloldle/frontend/infiniteloldle.com.pem:/root/infiniteloldle/frontend/infiniteloldle.com.pem
      - /root/infiniteloldle/frontend/infiniteloldle.com.key:/root/infiniteloldle/frontend/infiniteloldle.com.key
    networks:
      - mynetwork
    healthcheck:
      test: nc -z -v localhost 80
      interval: 15s
      timeout: 5s
      retries: 10

  loldle-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: loldle-api:latest
    container_name: loldle-api
    ports:
      - "127.0.0.1:8080:8080"
    restart: unless-stopped
    environment:
      - DOCKER_APP_PORT=8080
    networks:
      - mynetwork
    healthcheck:
      test: 'wget --header="User-Agent: Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.11 Infiniteloldle.com Health-Check" -nv -t1 --spider http://localhost:8080'
      interval: 15s
      timeout: 5s
      retries: 1

  loldle-mysql:
    build:
      context: ./mysql-docker
      dockerfile: Dockerfile
    image: loldle-mysql:latest
    container_name: loldle-mysql
    ports:
      - "127.0.0.1:3306:3306"
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - loldle-mysql:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$DB_PASSWORD
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mynetwork

  loldle-redis:
    image: redis:8.2.0
    container_name: loldle-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

volumes:
  loldle-mysql:
  redis-data:
